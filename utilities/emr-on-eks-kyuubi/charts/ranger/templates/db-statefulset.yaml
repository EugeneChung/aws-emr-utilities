apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  {{ .Release.Name }}-postgresdb
{{- if .Values.postgres.service.annotations }}
  annotations:
{{ toYaml .Values.postgres.service.annotations | indent 4 }}
{{- end }}
  labels:
    app.kubernetes.io/name: {{ template "ranger.name" . }}
    chart: {{ template "ranger.chart" . }}
    release: {{ .Release.Name }}
{{- if .Values.extraLabels }}
{{ toYaml .Values.extraLabels | indent 4 }}
{{- end }}   
spec:
  serviceName: {{ .Release.Name }}-postgres-headless  
  replicas: {{ .Values.postgres.replicaCount }}
{{- if .Values.postgres.strategy }}
  strategy:
{{ toYaml .Values.postgres.strategy | indent 4 }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "ranger.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/db-env: {{ include (print $.Template.BasePath "/db-env.yaml") . | sha256sum }}
        checksum/db-configmap: {{ include (print $.Template.BasePath "/db-configmap.yaml") . | sha256sum }}
{{- if .Values.postgres.podAnnotations -}}
{{ toYaml .Values.postgres.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app.kubernetes.io/name: {{ template "ranger.name" . }}
        release: {{ .Release.Name }} 
    spec:
      containers:
        - name: postgresdb
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
        {{- if and .Values.postgres.pghba .Values.postgres.config}}
          args: ["-c", "config_file=/pg_conf/postgresql.conf", "-c", "hba_file=/pg_hba/pg_hba.conf"]
        {{- end }}
        {{- if and (not .Values.postgres.pghba) .Values.postgres.config}}
          args: ["-c", "config_file=/pg_conf/postgresql.conf"]
        {{- end }}
        {{- if and .Values.postgres.pghba (not .Values.postgres.config)}}
          args: ["-c", "hba_file=/pg_hba/pg_hba.conf"]
        {{- end }}
          ports:
            - name: postgresql
              containerPort: 5432
          livenessProbe:
{{ toYaml .Values.postgres.livenessProbe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.postgres.readinessProbe | indent 12 }}    
          resources:
{{ toYaml .Values.postgres.resources | indent 12 }}
          env:
            - name: POD_IP
              valueFrom: { fieldRef: { fieldPath: status.podIP } }
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-postgres-env
          volumeMounts:
          {{- if or (.Files.Glob "postgresql/init*.sql") .Values.postgres.initdbscripts }}
            - name: dbinit
              mountPath: /docker-entrypoint-initdb.d
          {{- end }}
          {{- if or (.Files.Glob "postgresql/pg_hba.conf") .Values.postgres.pghba }}
            - name: pg-hba-conf
              mountPath: /pg_hba
          {{- end }}  
          {{- if or (.Files.Glob "postgresql/postgresql.conf") .Values.postgres.config }}
            - name: pg-config
              mountPath: /pg_conf
          {{- end }}
            - name: dbdata
              mountPath: /usr/lib/postgresql/data
      {{- if .Values.postgres.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.postgres.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.postgres.tolerations }}
      tolerations:
{{ toYaml .Values.postgres.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.postgres.nodeName }}
      nodeName: {{ .Values.postgres.nodeName | quote }}
      {{- end }}
      {{- if .Values.postgres.affinity }}
      affinity:
{{ toYaml .Values.postgres.affinity | indent 8 }}
      {{- end }}              
      volumes:
       {{- if or (.Files.Glob "postgresql/init*.sql") .Values.postgres.initdbscripts }}
        - name: dbinit
          configMap:
            name: {{ .Release.Name }}-pgconf
            items:
              - key: init.sql
                path: init.sql 
        {{- end }}   
        {{- if or (.Files.Glob "postgresql/pg_hba.conf") .Values.postgres.pghba }}       
        - name: pg-hba-conf
          configMap:
            name: {{ .Release.Name }}-pgconf 
            items:
              - key: pg_hba.conf
                path: pg_hba.conf
        {{- end }}         
        {{- if or (.Files.Glob "postgresql/postgresql.conf") .Values.postgres.config }}
        - name: pg-config
          configMap:
            name: {{ .Release.Name }}-pgconf
            items:
            - key: postgresql.conf
              path: postgresql.conf
        {{- end }}         
        - name: dbdata
        {{- if .Values.postgres.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.postgres.persistence.existingClaim | default (include "ranger.dbPvcName" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}